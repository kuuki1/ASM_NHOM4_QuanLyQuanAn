/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import CLASSES.BanAn;
import CLASSES.DatMon;
import CLASSES.DoAn;
import CLASSES.HoaDon;
import CLASSES.LoaiDoAn;
import DAOS.BanAnDAO;
import DAOS.DatMonDAO;
import DAOS.DoAnDAO;
import DAOS.HoaDonDAO;
import DAOS.LoaiDoAnDAO;
import UTILS.Auth;
import UTILS.MsgBox;
import java.awt.print.PrinterException;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author FPTSHOP
 */
public class mainWindows extends javax.swing.JFrame {

    BanAnDAO banAnDao = new BanAnDAO();
    LoaiDoAnDAO danhMucDao = new LoaiDoAnDAO();
    DoAnDAO doAnDao = new DoAnDAO();
    DatMonDAO datMonDao = new DatMonDAO();
    HoaDonDAO hoaDonDao = new HoaDonDAO();
    /**
     * Creates new form mainWindow
     */
    public mainWindows() {
        initComponents();
        init();
        setLocationRelativeTo(null);
        lblTongTien.setText("0.0");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        btnThanhToan = new javax.swing.JButton();
        btnGiamGia = new javax.swing.JButton();
        GiamGia = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        btnInHoaDon = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDonHang = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        cboLoaiDoAn = new javax.swing.JComboBox<>();
        cboMonAn = new javax.swing.JComboBox<>();
        btnThemMonAn = new javax.swing.JButton();
        SoLuong = new javax.swing.JSpinner();
        btnXoa = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBan = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        bill = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuHeThong = new javax.swing.JMenu();
        mniDangXuat = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mniThoat = new javax.swing.JMenuItem();
        mnuQuanLy = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);

        btnThanhToan.setBackground(new java.awt.Color(51, 153, 255));
        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThanhToan.setForeground(new java.awt.Color(255, 255, 255));
        btnThanhToan.setIcon(new javax.swing.ImageIcon("C:\\Users\\FPTSHOP\\OneDrive\\Máy tính\\DuAn1\\java\\QuanLyQuanAn\\src\\main\\resources\\ICON\\icons8-calculation-48.png")); // NOI18N
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btnGiamGia.setBackground(new java.awt.Color(51, 153, 255));
        btnGiamGia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGiamGia.setForeground(new java.awt.Color(255, 255, 255));
        btnGiamGia.setIcon(new javax.swing.ImageIcon("C:\\Users\\FPTSHOP\\OneDrive\\Máy tính\\DuAn1\\java\\QuanLyQuanAn\\src\\main\\resources\\ICON\\icons8-discount-48.png")); // NOI18N
        btnGiamGia.setText("Giảm giá(%)");
        btnGiamGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiamGiaActionPerformed(evt);
            }
        });

        GiamGia.setName(""); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Tổng :");

        lblTongTien.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btnInHoaDon.setBackground(new java.awt.Color(51, 153, 255));
        btnInHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnInHoaDon.setForeground(new java.awt.Color(255, 255, 255));
        btnInHoaDon.setIcon(new javax.swing.ImageIcon("C:\\Users\\FPTSHOP\\OneDrive\\Máy tính\\DuAn1\\java\\QuanLyQuanAn\\src\\main\\resources\\ICON\\icons8-print-48.png")); // NOI18N
        btnInHoaDon.setText("In hóa đơn");
        btnInHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInHoaDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(GiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnGiamGia)
                        .addGap(1, 1, 1)
                        .addComponent(btnThanhToan)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnInHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(GiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnInHoaDon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGiamGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tblDonHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên", "Số lượng", "Giá", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDonHang);
        if (tblDonHang.getColumnModel().getColumnCount() > 0) {
            tblDonHang.getColumnModel().getColumn(0).setPreferredWidth(70);
            tblDonHang.getColumnModel().getColumn(1).setPreferredWidth(10);
            tblDonHang.getColumnModel().getColumn(2).setPreferredWidth(30);
            tblDonHang.getColumnModel().getColumn(3).setPreferredWidth(30);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        cboLoaiDoAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiDoAnActionPerformed(evt);
            }
        });

        btnThemMonAn.setBackground(new java.awt.Color(51, 153, 255));
        btnThemMonAn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThemMonAn.setForeground(new java.awt.Color(255, 255, 255));
        btnThemMonAn.setIcon(new javax.swing.ImageIcon("C:\\Users\\FPTSHOP\\OneDrive\\Máy tính\\DuAn1\\java\\QuanLyQuanAn\\src\\main\\resources\\ICON\\icons8-add-40.png")); // NOI18N
        btnThemMonAn.setText("Thêm");
        btnThemMonAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemMonAnActionPerformed(evt);
            }
        });

        SoLuong.setName(""); // NOI18N

        btnXoa.setBackground(new java.awt.Color(51, 153, 255));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setIcon(new javax.swing.ImageIcon("C:\\Users\\FPTSHOP\\OneDrive\\Máy tính\\DuAn1\\java\\QuanLyQuanAn\\src\\main\\resources\\ICON\\icons8-delete-40.png")); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel2.setText("Danh mục:");

        jLabel3.setText("Món ăn:");

        jLabel4.setText("Số lượng:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnXoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnThemMonAn))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cboMonAn, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SoLuong)
                            .addComponent(cboLoaiDoAn, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboLoaiDoAn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemMonAn)
                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblBan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Tên Bàn", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblBanMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblBan);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
        );

        bill.setEnabled(false);
        jScrollPane3.setViewportView(bill);

        jMenuBar1.setFocusable(false);

        mnuHeThong.setText("Hệ thống");

        mniDangXuat.setText("Đăng xuất");
        mniDangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDangXuatActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniDangXuat);
        mnuHeThong.add(jSeparator1);

        mniThoat.setText("Thoát");
        mniThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniThoatActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniThoat);

        jMenuBar1.add(mnuHeThong);

        mnuQuanLy.setText("Admin");

        jMenuItem2.setText("Quản lý");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        mnuQuanLy.add(jMenuItem2);

        jMenuBar1.add(mnuQuanLy);

        jMenu1.setText("Thông tin tài khoản");
        jMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jMenuItem1.setText("Thông tin cá nhân");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniDangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDangXuatActionPerformed
        this.dispose();
        new loginForm(this,true).setVisible(true);
    }//GEN-LAST:event_mniDangXuatActionPerformed

    private void mniThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniThoatActionPerformed
        if(MsgBox.confirm(this, "Bạn muốn kết thúc hay không?")) {
            System.exit(0);
        }
    }//GEN-LAST:event_mniThoatActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if(Auth.isLogin() && Auth.isManager()) {
            this.dispose();
            new Admin(this,true).setVisible(true);
        } else {
            MsgBox.alert(this, "Bạn không có quyền truy cập!");
        }
        
       
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
         new Thong_Tin_Tai_Khoan(this,true).setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void tblBanMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBanMousePressed
        if(evt.getClickCount() == 1 ) {
            int row = tblBan.rowAtPoint(evt.getPoint());
            if (row >= 0) {
                String banId = tblBan.getValueAt(row, 0).toString();
                filltableDatMon();
                int soHang = tblDonHang.getRowCount();
                float tongDonHang = 0;
                for (int i = 0 ; i < soHang ; i++) {
                    float value = Float.valueOf(tblDonHang.getValueAt(i, 3).toString());
                    tongDonHang += value; 
                }
                DecimalFormat df = new DecimalFormat("000.0");
                String d1 = df.format(tongDonHang);
                lblTongTien.setText(d1);
                //layDanhSachMonAn(banId);
                System.out.println("Table ID clicked: " + banId);
                //showHoaDon(banId);
            }
            
        }
    }//GEN-LAST:event_tblBanMousePressed

    private void cboLoaiDoAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiDoAnActionPerformed
        fillComboBoxDoAn();
    }//GEN-LAST:event_cboLoaiDoAnActionPerformed

    private void btnThemMonAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemMonAnActionPerformed
        int row = tblBan.getSelectedRow();
        if (row < 0 || row >= tblBan.getRowCount()) {
            MsgBox.alert(this, "Vui lòng chọn bàn trước!");
            return;
        }
        addMonAn();
        TongHoaDon();
        updateTrangThaiBan2();
        filltableBanAn();
    }//GEN-LAST:event_btnThemMonAnActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        deleteMonAn();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnGiamGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiamGiaActionPerformed
        GiamGiaHoaDon();
    }//GEN-LAST:event_btnGiamGiaActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        int row = tblBan.getSelectedRow();
        if (row < 0 || row >= tblBan.getRowCount()) {
            MsgBox.alert(this, "Vui lòng chọn bàn cần thanh toán!");
            return;
        }
        xuatHoaDon();
        thanhToan();
        deleteDatMon();
        filltableDatMon();
        updateTrangThaiBan1();
        filltableBanAn();
        
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnInHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInHoaDonActionPerformed
        try {
            inHoaDon();
        } catch (PrinterException ex) {
            Logger.getLogger(mainWindows.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnInHoaDonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainWindows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainWindows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainWindows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainWindows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainWindows().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner GiamGia;
    private javax.swing.JSpinner SoLuong;
    private javax.swing.JTextPane bill;
    private javax.swing.JButton btnGiamGia;
    private javax.swing.JButton btnInHoaDon;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThemMonAn;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboLoaiDoAn;
    private javax.swing.JComboBox<String> cboMonAn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JMenuItem mniDangXuat;
    private javax.swing.JMenuItem mniThoat;
    private javax.swing.JMenu mnuHeThong;
    private javax.swing.JMenu mnuQuanLy;
    private javax.swing.JTable tblBan;
    private javax.swing.JTable tblDonHang;
    // End of variables declaration//GEN-END:variables

    private void init() {
        //jPanel1.setLayout(new FlowLayout());
        filltableBanAn();
        fillComboBoxLoai();
        fillComboBoxDoAn();
    }
    
    private void fillComboBoxLoai() {
        try {
            LoaiDoAnDAO loaiDoAnDAO = new LoaiDoAnDAO();
            List<String> loaiDoAnList = loaiDoAnDAO.getAllLoaiDoAn();
            cboLoaiDoAn.removeAllItems();
            for (String loaiDoAn : loaiDoAnList) {
                cboLoaiDoAn.addItem(loaiDoAn);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    
    public void fillComboBoxDoAn() {
        String loaiDoAn = (String) cboLoaiDoAn.getSelectedItem().toString();
        LoaiDoAn id = danhMucDao.selectByName(loaiDoAn);
        String idLoai = id.getId();
        List<DoAn> mon = doAnDao.getDoAnByLoai(idLoai);
        cboMonAn.removeAllItems();
        for(DoAn da : mon) {
            cboMonAn.addItem(da.getTen());
        }
    }
    
    public void filltableBanAn() {
        DefaultTableModel model = (DefaultTableModel) tblBan.getModel();
        model.setRowCount(0);
        try {
            List<BanAn> list = banAnDao.selectAll();
            for (BanAn ba : list) {
                Object[] row = {
                    ba.getId(),
                    ba.getTen(),
                    ba.getGhiChu(),
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }
    
    public void addMonAn() {
        try {
            String tenLoaiDoAn = cboLoaiDoAn.getSelectedItem().toString();
            String tenMonAn = cboMonAn.getSelectedItem().toString();
            int soLuong = (int) SoLuong.getValue();
            if (soLuong <= 0) {
                MsgBox.alert(this, "Số lượng phải lớn hơn 0");
                return;
            }
            LoaiDoAn loaiDoAn = danhMucDao.selectByName(tenLoaiDoAn);
            List<DoAn> doAnList = doAnDao.selectByName(tenMonAn, loaiDoAn.getId());
            if (doAnList == null || doAnList.isEmpty()) {
                MsgBox.alert(this, "Món ăn không tồn tại");
                return;
            }
            DoAn doAn = doAnList.get(0);
            float thanhTien = soLuong * doAn.getGia();
            DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
            boolean found = false;
            for (int i = 0; i < model.getRowCount(); i++) {
                String checkTenMonAn = (String) model.getValueAt(i, 0);
                if (checkTenMonAn.equals(tenMonAn)) {             
                    int checkSoLuong = Integer.parseInt(model.getValueAt(i, 1).toString());
                    int newSoLuong = checkSoLuong + soLuong;
                    float newThanhTien = newSoLuong * doAn.getGia();

                    model.setValueAt(newSoLuong, i, 1);
                    model.setValueAt(newThanhTien, i, 3);
                    updateDatMon();
                    found = true;
                    break;
                }
            }
            if (!found) {
                insertDatMon();
                model.addRow(new Object[]{
                    doAn.getTen(), 
                    soLuong, 
                    doAn.getGia(), 
                    thanhTien
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Lỗi thêm món ăn!");
        }
    }

    public void TongHoaDon() {
        int soHang = tblDonHang.getRowCount();
        float tongDonHang = 0;
        for (int i = 0 ; i < soHang ; i++) {
            float value = Float.valueOf(tblDonHang.getValueAt(i, 3).toString());
            tongDonHang += value; 
        }
        DecimalFormat df = new DecimalFormat("000.0");
        String d1 = df.format(tongDonHang);
        lblTongTien.setText(d1);
        
    }
    
    public void GiamGiaHoaDon() {
        String giamBill = lblTongTien.getText();
        giamBill = giamBill.replace(",", ".");
        float Giam = Float.parseFloat(giamBill);
        int giamGia = (int) GiamGia.getValue();
        if( giamGia < 0 || giamGia > 20) {
            MsgBox.alert(this, "Bạn chỉ giảm giá được từ 0 đến 20%.");
            return;
        }
        float Tongbill = Giam - ((Giam * giamGia) / 100);
        lblTongTien.setText(String.format("%.0f", Tongbill));
    }
    
    public void thanhToan() {
        DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
        model.setRowCount(0);
        insertHoaDon();
    }
    
    DatMon getForm() {
        int column = 0; 
        int row = tblBan.getSelectedRow(); 
        String value = tblBan.getModel().getValueAt(row, column).toString();
        String tenLoaiDoAn = cboLoaiDoAn.getSelectedItem().toString();
        String tenMonAn = cboMonAn.getSelectedItem().toString();
        int soLuong = (int) SoLuong.getValue();
        String dem = Integer.toString(soLuong);
        LoaiDoAn loaiDoAn = danhMucDao.selectByName(tenLoaiDoAn);
        List<DoAn> doAnList = doAnDao.selectByName(tenMonAn, loaiDoAn.getId());
        DoAn doAn = doAnList.get(0);
        float thanhTien = soLuong * doAn.getGia();
        DatMon dm = new DatMon();
        dm.setTenMon(tenMonAn);
        dm.setSoLuong(dem);
        dm.setGia(doAn.getGia());
        dm.setThanhTien(thanhTien);
        dm.setIdBan(value);
        return dm;
    }
    
    public void insertDatMon() {
        DatMon dm = getForm();
        try {
            datMonDao.insert(dm);
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm mới thất bại.");
            e.printStackTrace();
        }
    }
    
    DatMon getForm1() {
        int column = 0; 
        int row0 = tblBan.getSelectedRow();
        int row = tblDonHang.getSelectedRow(); 
        String value = tblBan.getModel().getValueAt(row0, column).toString();
        String value1 = tblDonHang.getModel().getValueAt(row, column).toString();
        String value2 = tblDonHang.getModel().getValueAt(row, column+1).toString();
        String value3 = tblDonHang.getModel().getValueAt(row, column+2).toString();
        float gia = Float.parseFloat(value3);
        String value4 = tblDonHang.getModel().getValueAt(row, column+3).toString();
        float thanhTien = Float.parseFloat(value4);
        DatMon dm = new DatMon();
        dm.setTenMon(value1);
        dm.setSoLuong(value2);
        dm.setGia(gia);
        dm.setThanhTien(thanhTien);
        dm.setIdBan(value);
        return dm;
    }
    
    public void updateDatMon() {
        DatMon dm = getForm1();
        try {
            datMonDao.update(dm);
        } catch (Exception e) {
            MsgBox.alert(this, "Cập nhập thất bại.");
            e.printStackTrace();
        }
    }
    
    public void deleteDatMon() {
        int column = 0; 
        int row = tblBan.getSelectedRow(); 
        String value = tblBan.getModel().getValueAt(row, column).toString();
        try {
            datMonDao.delete(value);
            lblTongTien.setText("0.0");
        } catch (Exception e) {
            MsgBox.alert(this, "Xóa thất bại.");
            e.printStackTrace();
        }
    }
    
    public void filltableDatMon() {
        int column = 0; 
        int row = tblBan.getSelectedRow(); 
        String value = tblBan.getModel().getValueAt(row, column).toString();
        DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
        model.setRowCount(0);
        try {
            List<DatMon> list = datMonDao.selectByBanID(value);
            for (DatMon dm : list) {
                Object[] rowData = {
                    dm.getTenMon(),
                    dm.getSoLuong(),
                    dm.getGia(),
                    dm.getThanhTien()
                };
                model.addRow(rowData);
                
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }
    
    HoaDon getFormHoaDon() {
        int column = 0; 
        int row = tblBan.getSelectedRow(); 
        String value = tblBan.getModel().getValueAt(row, column).toString();
        String Tong = lblTongTien.getText().trim().replace(",", ".");
        System.out.println("TongTien value: " + Tong);
        if (Tong.isEmpty()) {
            MsgBox.alert(this, "Tổng tiền không hợp lệ.");
            throw new NumberFormatException("Empty or invalid total amount");
        }
        float tong;
        try {
            tong = Float.parseFloat(Tong);
        } catch (NumberFormatException e) {
            MsgBox.alert(this, "Tổng tiền không hợp lệ.");
            throw e;
        }
        HoaDon hd = new HoaDon();
        hd.setIdBan(value);
        hd.setTongTien(tong);
        return hd;
    }
    
    public void insertHoaDon() {
        HoaDon hd = getFormHoaDon();
        try {
            hoaDonDao.insert(hd);
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm hóa đơn thất bại.");
            e.printStackTrace();
        }
    }
    
    BanAn getFormBan1() {
        int column = 0; 
        int row = tblBan.getSelectedRow(); 
        String value1 = tblBan.getModel().getValueAt(row, column).toString();
        String value2 = tblBan.getModel().getValueAt(row, column+1).toString();
        String value3 = "Trống";
        BanAn ba = new BanAn();
        ba.setId(value1);
        ba.setTen(value2);
        ba.setGhiChu(value3);
        return ba;
    }
    
    BanAn getFormBan2() {
        int column = 0; 
        int row = tblBan.getSelectedRow(); 
        String value1 = tblBan.getModel().getValueAt(row, column).toString();
        String value2 = tblBan.getModel().getValueAt(row, column+1).toString();
        String value3 = "Có người";
        BanAn ba = new BanAn();
        ba.setId(value1);
        ba.setTen(value2);
        ba.setGhiChu(value3);
        return ba;
    }
    
    public void updateTrangThaiBan1() {
        BanAn ba = getFormBan1();
        try {
            banAnDao.update(ba);
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm hóa đơn thất bại.");
            e.printStackTrace();
        }
    }
    
    public void updateTrangThaiBan2() {
        BanAn ba = getFormBan2();
        try {
            banAnDao.update(ba);
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm hóa đơn thất bại.");
            e.printStackTrace();
        }
    }

    public void deleteMonAn() {
        int column = 0; 
        int row = tblDonHang.getSelectedRow(); 
        if (row == -1) {
            MsgBox.alert(this, "Vui lòng chọn món cần xóa!");
            return;
        }
        String value = tblDonHang.getModel().getValueAt(row, column).toString();
        try {
            datMonDao.deleteMon(value);
            DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
            model.removeRow(row);
            int soHang = tblDonHang.getRowCount();
            float tongDonHang = 0;
            for (int i = 0; i < soHang; i++) {
                float values = Float.valueOf(tblDonHang.getValueAt(i, 3).toString());
                tongDonHang += values; 
            }
            DecimalFormat df = new DecimalFormat("000.0");
            String d1 = df.format(tongDonHang);
            lblTongTien.setText(d1);
        } catch (Exception e) {
            MsgBox.alert(this, "Xóa thất bại.");
            e.printStackTrace();
        }
    }
    
    public void xuatHoaDon() {
        bill.setText("                      Tiệm ăn 2 chàng ngốc \n");
        bill.setText(bill.getText() + "\t ĐỊA CHỈ Ở ĐÂU VẬY Ạ \n");
        bill.setText(bill.getText() + "\t HOTLINE: 0399999999 \n");
        bill.setText(bill.getText() + "-----------------------------------------------------------------------------------\n");
        bill.setText(bill.getText() + " MÓN ĂN \tSỐ LƯỢNG \tGIÁ \tTHÀNH TIỀN \n");
        bill.setText(bill.getText() + "-----------------------------------------------------------------------------------\n");

        DefaultTableModel df = (DefaultTableModel) tblDonHang.getModel();
        for (int i = 0; i < tblDonHang.getRowCount(); i++) {

            String tenMon = df.getValueAt(i, 0).toString();
            String soLuong = df.getValueAt(i, 1).toString();
            String gia = df.getValueAt(i, 2).toString();
            String thanhTien = df.getValueAt(i, 3).toString();

            bill.setText(bill.getText() + tenMon+"\t"+soLuong+"\t"+gia+"\t"+thanhTien+" \n");

        }
        bill.setText(bill.getText() + "-----------------------------------------------------------------------------------\n");
        bill.setText(bill.getText() + "\tTổng số tiền :"+lblTongTien.getText()+"\n");
        bill.setText(bill.getText() + "===============================================\n");
        bill.setText(bill.getText() +"                     Cảm ơn quý khách !"+"\n");
        bill.setText(bill.getText() + "-----------------------------------------------------------------------------------\n");
    }
    
    public void inHoaDon() throws PrinterException {
        bill.print();
    }
}